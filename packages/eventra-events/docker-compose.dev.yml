version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://eventra_dev:${POSTGRES_PASSWORD:-devpassword}@db:5432/eventra_dev
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=development-secret-key
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      db:
        condition: service_healthy
    networks:
      - eventra-dev-network
    command: npm run dev

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=eventra_dev
      - POSTGRES_USER=eventra_dev
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-devpassword}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eventra_dev -d eventra_dev"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - eventra-dev-network

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"  # Different port for dev
    volumes:
      - redis_dev_data:/data
    networks:
      - eventra-dev-network
    command: redis-server --appendonly yes

  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db
    depends_on:
      - db
    networks:
      - eventra-dev-network

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  eventra-dev-network:
    driver: bridge